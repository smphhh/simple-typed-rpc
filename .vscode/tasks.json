// Available variables which can be used inside of strings.
// ${workspaceRoot}: the root folder of the team
// ${file}: the current opened file
// ${fileBasename}: the current opened file's basename
// ${fileDirname}: the current opened file's dirname
// ${fileExtname}: the current opened file's extension
// ${cwd}: the current working directory of the spawned process

{
	"version": "0.1.0",

	"command": "tsc",

	// The command is a shell script
	"isShellCommand": true,

    "windows": {
        "command": "${workspaceRoot}/node_modules/.bin/tsc.cmd",
        "isShellCommand": false
    },
    
	// Show the output window only if unrecognized errors occur.
	"showOutput": "silent",

	// Tell the tsc compiler to use the tsconfig.json from the open folder.
	"args": [],

	// use the standard tsc problem matcher to find compile problems
	// in the output.
	"problemMatcher": "$tsc"
}


// A task runner configuration for gulp. Gulp provides a less task
// which compiles less to css.
/*
{
	"version": "0.1.0",
	"command": "gulp",
	"isShellCommand": true,
	"tasks": [
		{
			"taskName": "less",
			// Make this the default build command.
			"isBuildCommand": true,
			// Show the output window only if unrecognized errors occur.
			"showOutput": "silent",
			// Use the standard less compilation problem matcher.
			"problemMatcher": "$lessCompile"
		}
	]
}
*/

// Uncomment the following section to use jake to build a workspace
// cloned from https://github.com/Microsoft/TypeScript.git
/*
{
	"version": "0.1.0",
	// Task runner is jake
	"command": "jake",
	// Need to be executed in shell / cmd
	"isShellCommand": true,
	"showOutput": "silent",
	"tasks": [
		{
			// TS build command is local.
			"taskName": "local",
			// Make this the default build command.
			"isBuildCommand": true,
			// Show the output window only if unrecognized errors occur.
			"showOutput": "silent",
			// Use the redefined Typescript output problem matcher.
			"problemMatcher": [
				"$tsc"
			]
		}
	]
}
*/

